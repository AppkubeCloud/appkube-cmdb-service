openapi: 3.0.3 # version of the specification
info:
  title: CloudAsset-OPEN-API-Set
  version: 1.0.0
  description: Service API specification to support Database operations

servers:
  - url: '{protocol}://{ip}:{port}/{base-api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        enum:
          - localhost
          - 34.199.12.114
        default: localhost
      port:
        enum:
          - '6057'
          - '5057'
        default: '6057'
      base-api:
        enum:
          - api
        default: api

tags:
  - name: Organization
    description: To perform CRUD operations on organization table schema

paths:
  /organizations:
    get:
      tags:
        - Organization
      summary: Fetch list of organizations
      operationId: getOrganizationList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - Organization
      summary: Add organization
      operationId: addOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - Organization
      summary: Update organization
      operationId: updateOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /organizations/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Organization
      summary: Fetch an organization of given id
      operationId: getOrganization
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /organizations/search:
    get:
      tags:
        - Organization
      summary: Search organizations data
      operationId: search
      parameters:
        - name: organizationDto
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
components:
  schemas:
    OrganizationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        departments:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentDTO'
    DepartmentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64