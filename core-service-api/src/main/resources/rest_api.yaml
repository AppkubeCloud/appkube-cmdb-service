openapi: 3.0.3 # version of the specification
info:
  title: CMDB-OPEN-API-COLLECTION
  version: 1.0.0
  description: Service API specification to support Database operations

servers:
  - url: '{protocol}://{ip}:{port}/{base-api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        enum:
          - localhost
          - 34.199.12.114
        default: localhost
      port:
        enum:
          - '6057'
          - '5057'
        default: '6057'
      base-api:
        enum:
          - api
        default: api

tags:
  - name: Organization
    description: perform CRUD operations on organization table
  - name: Department
    description: perform CRUD operations on department table
  - name: CloudEnvironment
    description: perform CRUD operations on cloud_environment table
  - name: CloudElementSummary
    description: perform CRUD operations on cloud_element_summary table
  - name: CloudElement
    description: perform CRUD operations on cloud_element table
  - name: MicroService
    description: perform CRUD operations on micro_service table
  - name: DeploymentEnvironment
    description: perform CRUD operations on deployment_environment table
  - name: DbCategory
    description: perform CRUD operations on db_category table
  - name: OrgWiseQuery
    description: get organization wise data
  - name: OrgDepWiseQuery
    description: get organization and department wise data
  - name: OrgProductWiseQuery
    description: get organization and products wise data
  - name: OrgEnvironmentWiseQuery
    description: get organization and environments wise data
  - name: OrgProductEnvironmentWiseQuery
    description: get organization and products and environments wise data
  - name: OrgServiceWiseQuery
    description: get organization and  service wise data
  - name: OrgLandingZoneWiseQuery
    description: get organization and landing-zone service wise
  - name: OrgServiceSlaWiseQuery
    description: get organization and services-sla service wise data
  - name: OrgDepProductWiseQuery
    description: get organization and department and product wise data
  - name: OrgDepProductEnvironmentWiseQuery
    description: get organization and department and product and environment wise data
  - name: OrgDepServiceWiseQuery
    description: get organization and  department service wise data
  - name: OrgDepLandingZoneWiseQuery
    description: get organization and  department service wise data
  - name: OrgDepServiceSlaWiseQuery
    description: get organization and department and services-sla service wise data
  - name: OrgLandingZoneVpceQuery
    description: get organization and landingzone and product  wise data
  - name: InfraTopologyQuery
    description: get infrastructure topology wise data
  - name: SpendAnalyticeQuery
    description: get spend analytice  wise data
  - name: CurrentSpendRateQuery
    description: get current spend analytice  wise data
  - name: TotalSpendQuery
    description: get total spend analytice  wise data
  - name: CloudWiseQuery
    description: get cloud wise analytice  wise data


paths:
  /organizations:
    get:
      tags:
        - Organization
      summary: Fetch list of organizations
      operationId: getOrganizationList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - Organization
      summary: Add organization
      operationId: addOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - Organization
      summary: Update organization
      operationId: updateOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /organizations/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Organization
      summary: Fetch an organization of given id
      operationId: getOrganization
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /organizations/search:
    get:
      tags:
        - Organization
      summary: Search organizations data
      operationId: search
      parameters:
        - name: organizationDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /departments:
    get:
      tags:
        - Department
      summary: Fetch list of departments
      operationId: getDepartmentList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - Department
      summary: Add department
      operationId: addDepartment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - Department
      summary: Update department
      operationId: updateDepartment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /departments/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Department
      summary: Fetch a department of given id
      operationId: getDepartment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /departments/search:
    get:
      tags:
        - Department
      summary: Search departments data
      operationId: searchDepartment
      parameters:
        - name: departmentDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-environments:
    get:
      tags:
        - CloudEnvironment
      summary: Fetch list of cloud-environments
      operationId: getCloudEnvironmentList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - CloudEnvironment
      summary: Add cloud-environment
      operationId: addCloudEnvironment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - CloudEnvironment
      summary: Update cloud-environment
      operationId: updateCloudEnvironment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-environments/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - CloudEnvironment
      summary: Fetch a cloud-environment of given id
      operationId: getCloudEnvironment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-environments/search:
    get:
      tags:
        - CloudEnvironment
      summary: Search cloud-environments data
      operationId: searchCloudEnvironment
      parameters:
        - name: cloudEnvironmentDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-element-summary:
    get:
      tags:
        - CloudElementSummary
      summary: Fetch list of cloud-element-summary
      operationId: getCloudElementSummaryList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementSummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - CloudElementSummary
      summary: Add cloud-element-summary
      operationId: addCloudElementSummary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudElementSummaryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - CloudElementSummary
      summary: Update cloud-element-summary
      operationId: updateCloudElementSummary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudElementSummaryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-element-summary/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - CloudElementSummary
      summary: Fetch a cloud-element-summary of given id
      operationId: getCloudElementSummary
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-element-summary/search:
    get:
      tags:
        - CloudElementSummary
      summary: Search cloud-element-summary data
      operationId: searchCloudElementSummary
      parameters:
        - name: cloudElementSummaryDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSummaryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementSummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-elements:
    get:
      tags:
        - CloudElement
      summary: Fetch list of cloud-elements
      operationId: getCloudElementList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - CloudElement
      summary: Add cloud-element
      operationId: addCloudElement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudElementDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - CloudElement
      summary: Update cloud-element
      operationId: updateCloudElement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudElementDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-elements/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - CloudElement
      summary: Fetch a cloud-element of given id
      operationId: getCloudElement
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /cloud-elements/search:
    get:
      tags:
        - CloudElement
      summary: Search cloud-element data
      operationId: searchCloudElement
      parameters:
        - name: cloudElementDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /micro-services:
    get:
      tags:
        - MicroService
      summary: Fetch list of micro-services
      operationId: getMicroServiceList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MicroServiceDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - MicroService
      summary: Add micro-service
      operationId: addMicroService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicroServiceDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - MicroService
      summary: Update micro-service
      operationId: updateMicroService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicroServiceDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /micro-services/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - MicroService
      summary: Fetch a micro-service of given id
      operationId: getMicroService
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /micro-services/search:
    get:
      tags:
        - MicroService
      summary: Search micro-service data
      operationId: searchMicroService
      parameters:
        - name: MicroServiceDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroServiceDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MicroServiceDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /deployment-environments:
    get:
      tags:
        - DeploymentEnvironment
      summary: Fetch list of deployment-environments
      operationId: getDeploymentEnvironmentList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - DeploymentEnvironment
      summary: Add deployment-environment
      operationId: addDeploymentEnvironment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - DeploymentEnvironment
      summary: Update deployment-environment
      operationId: updateDeploymentEnvironment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /deployment-environments/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - DeploymentEnvironment
      summary: Fetch a deployment-environment of given id
      operationId: getDeploymentEnvironment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /deployment-environments/search:
    get:
      tags:
        - DeploymentEnvironment
      summary: Search deployment-environment data
      operationId: searchDeploymentEnvironment
      parameters:
        - name: deploymentEnvironmentDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironmentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentEnvironmentDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /db-category:
    get:
      tags:
        - DbCategory
      summary: Fetch list of db-category
      operationId: getDbCategoryList
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbCategoryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - DbCategory
      summary: Add db-category
      operationId: addDbCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbCategoryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    patch:
      tags:
        - DbCategory
      summary: Update db-category
      operationId: updateDbCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbCategoryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /db-category/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - DbCategory
      summary: Fetch a db-category of given id
      operationId: getDbCategory
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /db-category/search:
    get:
      tags:
        - DbCategory
      summary: Search db-category data
      operationId: searchDbCategory
      parameters:
        - name: dbCategoryDTO
          in: query
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbCategoryDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbCategoryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"

  /query/organizations/{orgId}/cloud-environments/count:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise account's resource counts
      operationId: getResourceCountsByOrg
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentCountQueryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/cloud/{cloud}/cloud-environments/count:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization and cloud wise account's resource counts
      operationId: getResourceCountsByOrgAndCloud
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: cloud
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentCountQueryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/cloud-environments/summary:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise account's resource summary
      operationId: getResourceSummaryByOrg
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: departmentId
          schema:
            type: integer
            format: int64
          required: false
        - in: query
          name: product
          schema:
            type: string
          required: false
        - in: query
          name: env
          schema:
            type: string
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentQueryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/cloud/{cloud}/cloud-environments/summary:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization and cloud wise account's resource summary
      operationId: getResourceSummaryByOrgAndCloud
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: cloud
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentQueryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/products:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise products
      operationId: getOrgWiseProducts
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise landing-zone
      operationId: getOrgWiseLandingZone
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/product-enclave:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise product-enclave
      operationId: getOrgWiseProductEnclave
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services:
    get:
      tags:
        - OrgWiseQuery
      summary: Get organization wise services
      operationId: getOrgWiseServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/products:
    get:
      tags:
        - OrgDepWiseQuery
      summary: Get organization and department wise products
      operationId: getOrgDepProductWiseServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/landing-zone:
    get:
      tags:
        - OrgDepWiseQuery
      summary: Get organization and department wise landing-zone
      operationId: getOrgDepLandingZoneWiseServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/product-enclave:
    get:
      tags:
        - OrgDepWiseQuery
      summary: Get organization and department wise product-enclave
      operationId: getOrgDepProductEncWiseServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services:
    get:
      tags:
        - OrgDepWiseQuery
      summary: Get organization and department wise services
      operationId: getOrgDepServicesWiseServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/products/{product}/services:
    get:
      tags:
        - OrgProductWiseQuery
      summary: Get organization and product wise services
      operationId: getOrgProductServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: product
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/environments/{env}/services:
    get:
      tags:
        - OrgEnvironmentWiseQuery
      summary: Get organization and environment wise services
      operationId: getOrgEnvServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: env
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/products/{product}/environments/{env}/services:
    get:
      tags:
        - OrgProductEnvironmentWiseQuery
      summary: Get organization and products and environment wise services
      operationId: getOrgProductEnvServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: product
          schema:
            type: string
          required: true
        - in: path
          name: env
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/service-type/{serviceType}/services:
    get:
      tags:
        - OrgServiceWiseQuery
      summary: Get organization and service wise services-type
      operationId: getOrgServiceTypeServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceType
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service-cost:
    get:
      tags:
        - OrgServiceWiseQuery
      summary: Get organization and service wise services-cost
      operationId: getOrgServiceCostServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service-cost/daily:
    get:
      tags:
        - OrgServiceWiseQuery
      summary: Get organization and service wise services-daily-cost
      operationId: getOrgServiceDailyCostServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service-cost/weekly:
    get:
      tags:
        - OrgServiceWiseQuery
      summary: Get organization and service wise services-weekly-cost
      operationId: getOrgServiceWeeklyCostServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service-cost/monthly:
    get:
      tags:
        - OrgServiceWiseQuery
      summary: Get organization and service wise services-monthly-cost
      operationId: getOrgServiceMonthlyCostServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/services:
    get:
      tags:
        - OrgLandingZoneWiseQuery
      summary: Get organization and landing-zone wise services
      operationId: getOrgLandingZoneServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/products:
    get:
      tags:
        - OrgLandingZoneWiseQuery
      summary: Get organization and landing-zone wise services product
      operationId: getOrgLandingZoneMicroServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{name}/service-sla:
    get:
      tags:
        - OrgServiceSlaWiseQuery
      summary: Get organization and service-name wise services service-sla
      operationId: getOrgServiceSlaServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service/cureent-sla:
    get:
      tags:
        - OrgServiceSlaWiseQuery
      summary: Get organization and service-name wise services service-cureent-sla
      operationId: getOrgServiceCureentSlaServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service/weekly-sla:
    get:
      tags:
        - OrgServiceSlaWiseQuery
      summary: Get organization and service-name wise services service-weekly-sla
      operationId: getOrgServiceWeeklySlaServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/services/{serviceName}/service/monthly-sla:
    get:
      tags:
        - OrgServiceSlaWiseQuery
      summary: Get organization and service-name wise services service-monthly-sla
      operationId: getOrgServiceMonthlySlaServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/products/{product}/services:
    get:
      tags:
        - OrgDepProductWiseQuery
      summary: Get organization and department and product wise services
      operationId: getOrgDepProductServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: product
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/environments/{env}/services:
    get:
      tags:
        - OrgDepProductEnvironmentWiseQuery
      summary: Get organization and department  and environment wise services
      operationId: getOrgDepEnvironmentServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: env
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/products/{product}/environments/{env}/services:
    get:
      tags:
        - OrgDepProductEnvironmentWiseQuery
      summary: Get organization and department and product and environment wise services
      operationId: getOrgDepProductEnvironmentServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: product
          schema:
            type: string
          required: true
        - in: path
          name: env
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/service-type/{serviceType}/services:
    get:
      tags:
        - OrgDepServiceWiseQuery
      summary: Get organization and department wise services
      operationId: getOrgDepServices
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceType
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service-cost:
    get:
      tags:
        - OrgDepServiceWiseQuery
      summary: Get organization and department wise services-cost
      operationId: getOrgDepServicesCost
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service-cost/daily:
    get:
      tags:
        - OrgDepServiceWiseQuery
      summary: Get organization and department wise services-daily-cost
      operationId: getOrgDepServicesDailyCost
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service-cost/weekly:
    get:
      tags:
        - OrgDepServiceWiseQuery
      summary: Get organization and department wise services-weekly-cost
      operationId: getOrgDepServicesWeeklyCost
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service-cost/monthly:
    get:
      tags:
        - OrgDepServiceWiseQuery
      summary: Get organization and department wise services-monthly-cost
      operationId: getOrgDepServicesMonthlyCost
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/landing-zone/{landingZone}/services:
    get:
      tags:
        - OrgDepLandingZoneWiseQuery
      summary: Get organization and department and landingZone wise services
      operationId: getOrgDepLandingZoneService
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/landing-zone/{landingZone}/products:
    get:
      tags:
        - OrgDepLandingZoneWiseQuery
      summary: Get organization and department and products wise services
      operationId: getOrgDepProductsService
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{name}/service-sla:
    get:
      tags:
        - OrgDepServiceSlaWiseQuery
      summary: Get organization and department wise services-sla
      operationId: getOrgDepServiceSla
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service/cureent-sla:
    get:
      tags:
        - OrgDepServiceSlaWiseQuery
      summary: Get organization and department wise services-cureent-sla
      operationId: getOrgDepServiceCureentSla
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service/weekly-sla:
    get:
      tags:
        - OrgDepServiceSlaWiseQuery
      summary: Get organization and department wise services-weekly-sla
      operationId: getOrgDepServiceWeeklySla
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/services/{serviceName}/service/monthly-sla:
    get:
      tags:
        - OrgDepServiceSlaWiseQuery
      summary: Get organization and department wise services-monthly-sla
      operationId: getOrgDepServiceMonthlySla
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: serviceName
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type : object
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/product-enclave:
    get:
      tags:
        - OrgLandingZoneWiseQuery
      summary: get list of  product-enclaveof given Organization and landingZone
      operationId: OrgLandingZoneProductEnclave
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type : string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/departments/{depId}/landing-zone/{landingZone}/product-enclave:
    get:
      tags:
        - OrgDepLandingZoneWiseQuery
      summary: get list of  product-enclave of given Organization and department and landingZone
      operationId: OrgDepLandingZoneProductEnclave
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: depId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type : string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/product-enclave/{product}/vpc-summary:
    get:
      tags:
        - OrgLandingZoneVpceQuery
      summary: get list of  vpc of given Organization and landingZone  and product
      operationId: orgVpcSummary
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
        - in: path
          name: product
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementVpcDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/infra-topology:
    get:
      tags:
        - InfraTopologyQuery
      summary: get infra topology view of given Organization and landingZone
      operationId: getInfraTopology
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraTopologyDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/organizations/{orgId}/landing-zone/{landingZone}/product-enclave/{productEnclave}/infra-topology-summary:
    get:
      tags:
        - InfraTopologyQuery
      summary: get infra topology summary of given Organization, landingZone and product enclave
      operationId: getInfraTopologySummary
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
        - in: path
          name: landingZone
          schema:
            type: string
          required: true
        - in: path
          name: productEnclave
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfraTopologySummaryDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/spend-today/organization/{orgId}/analytics:
    get:
      tags:
        - SpendAnalyticeQuery
      summary: get today's spend
      operationId: allSpendTodayAnalytics
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSpendAnalyticsDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/spend-yesterday/organization/{orgId}/analytics:
    get:
      tags:
        - SpendAnalyticeQuery
      summary: get yesterday's spend
      operationId: allSpendYesterdaySpendAnalytics
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudElementSpendAnalyticsDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/spend-current-rate/organization/{orgId}/hour/analytics:
    get:
      tags:
        - CurrentSpendRateQuery
      summary: get current spend rate average par hour
      operationId: currentSpendRateAvePerHour
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/spend-current-rate/organization/{orgId}/day/analytics:
    get:
      tags:
        - CurrentSpendRateQuery
      summary: get current spend rate par day
      operationId: currentSpendRatePerDay
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/spend-total/organization/{orgId}/analytics:
    get:
      tags:
        - TotalSpendQuery
      summary: get list of cloud wise  rate
      operationId: cloudWiseAnalytics
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/cloud-wise/orgnaiztion/{orgId}/cloud-analytics:
    get:
      tags:
        - CloudWiseQuery
      summary: get list of total-spend rate
      operationId: spendTotal
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementCloudWiseAnalyticsDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /query/cloud-wise/orgnaiztion/{orgId}/monthly-analytics:
    get:
      tags:
        - CloudWiseQuery
      summary: get list of total-spend rate
      operationId: eachMonthTotal
      parameters:
        - in: path
          name: orgId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudElementCloudWiseMonthlyAnalyticsDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
components:
  schemas:
    OrganizationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        securityServiceOrgId:
          type: integer
          format: int64
        name:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        departments:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentDTO'
    DepartmentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        organizationId:
          type: integer
          format: int64
    CloudEnvironmentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        accountId:
          type: string
        cloud:
          type: string
        displayName:
          type: string
        roleArn:
          type: string
        externalId:
          type: string
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        departmentId:
          type: integer
          format: int64
    CloudElementSummaryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        summaryJson:
          type: object
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        cloudEnvironmentId:
          type: integer
          format: int64
    CloudElementDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        instanceId:
          type: string
        elementType:
          type: string
        arn:
          type: string
        cloudEntity:
          type: object
        hardwareLocation:
          type: object
        hostedServices:
          type: object
        slaJson:
          type: object
        costJson:
          type: object
        viewJson:
          type: object
        configJson:
          type: object
        complianceJson:
          type: object
        tagStatus:
          type: string
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        cloudEnvironmentId:
          type: integer
          format: int64
    MicroServiceDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        department:
          type: string
        product:
          type: string
        environment:
          type: string
        serviceType:
          type: string
        serviceTopology:
          type: object
        businessLocation:
          type: object
        slaJson:
          type: object
        costJson:
          type: object
        viewJson:
          type: object
        configJson:
          type: object
        service:
          type: object
        complianceJson:
          type: object
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        departmentId:
          type: integer
          format: int64
        deploymentEnvironmentId:
          type: integer
          format: int64
    DeploymentEnvironmentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
    DbCategoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
    EnvironmentCountQueryDTO:
      type: object
      properties:
        environments:
          type: integer
          format: int64
        assets:
          type: integer
          format: int64
        alerts:
          type: integer
          format: int64
        totalbilling:
          type: integer
          format: int64
        cloud:
          type: string
    EnvironmentSummaryQueryDTO:
      type: object
      properties:
        cloud:
          type: string
        landingZone:
          type: string
        productEnclave:
          type: integer
          format: int64
        product:
          type: integer
          format: int64
        appService:
          type: integer
          format: int64
        dataService:
          type: integer
          format: int64
    CloudElementVpcDTO:
      type: object
      properties:
        productEnclave:
          type: string
        product:
          type: integer
          format: int64
        appService:
          type: integer
          format: int64
        dataService:
          type: integer
          format: int64
    EnvironmentQueryDTO:
      type: object
      properties:
        cloud:
          type: string
        environmentSummaryList:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentSummaryQueryDTO'
    InfraTopologyElementDTO:
      type: object
      properties:
        arn:
          type: string
        name:
          type: string
    InfraTopologyCategoryDTO:
      type: object
      properties:
        category:
          type: string
        elementType:
          type: string
        total:
          type: string
        cpuUtilization:
          type: string
        memory:
          type: string
        networkBytes:
          type: string
        networkBytesOut:
          type: string
        cpuReservation:
          type: string
        memoryReservation:
          type: string
        elementList:
          type: array
          items:
            $ref: '#/components/schemas/InfraTopologyElementDTO'
    InfraTopologyHostingTypeDTO:
      type: object
      properties:
        hostingType:
          type: string
        category:
          type: object
          items:
            $ref: '#/components/schemas/InfraTopologyCategoryDTO'
    InfraTopologyProductEnclaveDTO:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        state:
          type: string
        hostingTypeList:
          type: array
          items:
            $ref: '#/components/schemas/InfraTopologyHostingTypeDTO'
    InfraTopologyDTO:
      type: object
      properties:
        landingZone:
          type: string
        productEnclaveList:
          type: array
          items:
            $ref: '#/components/schemas/InfraTopologyProductEnclaveDTO'
        globalServiceList:
          type: array
          items:
            type : string
    CloudElementSpendAnalyticsDTO:
      type: object
      properties:
        sumCurrentDate:
          type: integer
          format: int64
        sumPreviousDate:
          type: integer
          format: int64
        percentage:
          type: string
    CloudElementCurrentsDTO:
      type: object
      properties:
        sumCurrentHour:
          type: integer
          format: int64
        sumPreviousHour:
          type: integer
          format: int64
        percentage:
          type: integer
          format: int64
        sum_difference:
          type: integer
          format: int64
    CloudElementCloudWiseAnalyticsDTO:
      type: object
      properties:
        cloud:
          type: string
        sumValues:
          type: integer
          format: int64
        percentage:
          type: integer
          format: int64
    CloudElementCloudWiseMonthlyAnalyticsDTO:
      type: object
      properties:
        cloud:
          type: string
        month:
          type: string
        sumValues:
          type: integer
          format: int64
    InfraTopologySummaryDTO:
      type: object
      properties:
        hostingType:
          type: string
        elementType:
          type: string
        category:
          type: string
        dbCategory:
          type: string
        totalElements:
          type: integer
          format: int64