
CREATE TABLE public.cloud_element_cost (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	cloud_element_id int8 NULL,
	sla_json jsonb NULL,
	cost_json jsonb NULL,
	compliance_json jsonb NULL,
	status varchar(255) NULL,
	created_on timestamp NULL,
	updated_on timestamp NULL,
	updated_by varchar(255) NULL,
	created_by varchar(255) NULL,
	CONSTRAINT cloud_element_cost_pkey PRIMARY KEY (id)
);
ALTER TABLE public.cloud_element_cost ADD CONSTRAINT fk_cloud_element_cost__cloud_element_id FOREIGN KEY (cloud_element_id) REFERENCES public.cloud_element(id);

-- drop function cloud_element_add;
CREATE OR REPLACE FUNCTION cloud_element_add()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO cloud_element_cost (cloud_element_id, status, created_on, created_by)
    VALUES (NEW.id, NEW.status, current_timestamp, 'System');
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

--DROP TRIGGER cloud_element_add_trigger ON public.cloud_element;
CREATE  TRIGGER cloud_element_add_trigger
AFTER insert  ON cloud_element
FOR EACH ROW
EXECUTE FUNCTION cloud_element_add();

-- drop function cloud_element_delete;
CREATE OR REPLACE FUNCTION cloud_element_delete()
RETURNS TRIGGER AS $$
BEGIN
    delete from cloud_element_cost where cloud_element_id = OLD.id;
    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

--DROP TRIGGER cloud_element_delete_trigger ON public.cloud_element;
CREATE  TRIGGER cloud_element_delete_trigger
BEFORE DELETE  ON cloud_element
FOR EACH ROW
EXECUTE FUNCTION cloud_element_delete();

alter table cloud_element drop column sla_json;
alter table cloud_element drop column cost_json;
alter table cloud_element drop column compliance_json;
